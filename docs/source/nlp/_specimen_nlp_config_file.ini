# Configuration file for CRATE NLP manager (crate_nlp).
# Version 0.20.6 (2025-01-09).
#
# PLEASE SEE THE HELP at https://crateanon.readthedocs.io/
# Using defaults for Docker environment: False

# =============================================================================
# A. Individual NLP definitions
# =============================================================================
# - referred to by the NLP manager's command-line arguments
# - You are likely to need to alter these (particularly the bits in capital
#   letters) to refer to your own database(s).

# -----------------------------------------------------------------------------
# GATE people-and-places demo
# -----------------------------------------------------------------------------

[nlpdef:gate_name_location_demo]

inputfielddefs =
    INPUT_FIELD_CLINICAL_DOCUMENTS
    INPUT_FIELD_PROGRESS_NOTES
processors =
    GATE procdef_gate_name_location
progressdb = DESTINATION_DATABASE
hashphrase = doesnotmatter


# -----------------------------------------------------------------------------
# KConnect (Bio-YODIE) disease-finding GATE app
# -----------------------------------------------------------------------------

[nlpdef:gate_kconnect_diseases]

inputfielddefs =
    INPUT_FIELD_CLINICAL_DOCUMENTS
    INPUT_FIELD_PROGRESS_NOTES
processors =
    GATE procdef_gate_kconnect
progressdb = DESTINATION_DATABASE
hashphrase = doesnotmatter


# -----------------------------------------------------------------------------
# KCL Lewy body dementia GATE app
# -----------------------------------------------------------------------------

[nlpdef:gate_kcl_lbd]

inputfielddefs =
    INPUT_FIELD_CLINICAL_DOCUMENTS
    INPUT_FIELD_PROGRESS_NOTES
processors =
    GATE procdef_gate_kcl_lbda
progressdb = DESTINATION_DATABASE
hashphrase = doesnotmatter


# -----------------------------------------------------------------------------
# KCL pharmacotherapy GATE app
# -----------------------------------------------------------------------------

[nlpdef:gate_kcl_pharmacotherapy]

inputfielddefs =
    INPUT_FIELD_CLINICAL_DOCUMENTS
    INPUT_FIELD_PROGRESS_NOTES
processors =
    GATE procdef_gate_pharmacotherapy
progressdb = DESTINATION_DATABASE
hashphrase = doesnotmatter


# -----------------------------------------------------------------------------
# Medex-UIMA medication-finding app
# -----------------------------------------------------------------------------

[nlpdef:medex_medications]

inputfielddefs =
    INPUT_FIELD_CLINICAL_DOCUMENTS
    INPUT_FIELD_PROGRESS_NOTES
processors =
    Medex procdef_medex_medications
progressdb = DESTINATION_DATABASE
hashphrase = doesnotmatter


# -----------------------------------------------------------------------------
# CRATE number-finding Python regexes
# -----------------------------------------------------------------------------

[nlpdef:crate_biomarkers]

inputfielddefs =
    INPUT_FIELD_CLINICAL_DOCUMENTS
    INPUT_FIELD_PROGRESS_NOTES
processors =
    # -------------------------------------------------------------------------
    # Biochemistry
    # -------------------------------------------------------------------------
    Albumin procdef_albumin
    AlbuminValidator procdef_validate_albumin
    AlkPhos procdef_alkphos
    AlkPhosValidator procdef_validate_alkphos
    ALT procdef_alt
    ALTValidator procdef_validate_alt
    Bilirubin procdef_bilirubin
    BilirubinValidator procdef_validate_bilirubin
    Creatinine procdef_creatinine
    CreatinineValidator procdef_validate_creatinine
    Crp procdef_crp
    CrpValidator procdef_validate_crp
    GammaGT procdef_gammagt
    GammaGTValidator procdef_validate_gammagt
    Glucose procdef_glucose
    GlucoseValidator procdef_validate_glucose
    HbA1c procdef_hba1c
    HbA1cValidator procdef_validate_hba1c
    HDLCholesterol procdef_hdlcholesterol
    HDLCholesterolValidator procdef_validate_hdlcholesterol
    LDLCholesterol procdef_ldlcholesterol
    LDLCholesterolValidator procdef_validate_ldlcholesterol
    Lithium procdef_lithium
    LithiumValidator procdef_validate_lithium
    Potassium procdef_potassium
    PotassiumValidator procdef_validate_potassium
    Sodium procdef_sodium
    SodiumValidator procdef_validate_sodium
    TotalCholesterol procdef_totalcholesterol
    TotalCholesterolValidator procdef_validate_totalcholesterol
    Triglycerides procdef_triglycerides
    TriglyceridesValidator procdef_validate_triglycerides
    Tsh procdef_tsh
    TshValidator procdef_validate_tsh
    Urea procdef_urea
    UreaValidator procdef_validate_urea
    # -------------------------------------------------------------------------
    # Clinical
    # -------------------------------------------------------------------------
    Bmi procdef_bmi
    BmiValidator procdef_validate_bmi
    Bp procdef_bp
    BpValidator procdef_validate_bp
    Height procdef_height
    HeightValidator procdef_validate_height
    Weight procdef_weight
    WeightValidator procdef_validate_weight
    # -------------------------------------------------------------------------
    # Cognitive
    # -------------------------------------------------------------------------
    Ace procdef_ace
    AceValidator procdef_validate_ace
    MiniAce procdef_miniace
    MiniAceValidator procdef_validate_miniace
    Mmse procdef_mmse
    MmseValidator procdef_validate_mmse
    Moca procdef_moca
    MocaValidator procdef_validate_moca
    # -------------------------------------------------------------------------
    # Haematology
    # -------------------------------------------------------------------------
    Basophils procdef_basophils
    BasophilsValidator procdef_validate_basophils
    Eosinophils procdef_eosinophils
    EosinophilsValidator procdef_validate_eosinophils
    Esr procdef_esr
    EsrValidator procdef_validate_esr
    Haematocrit procdef_haematocrit
    HaematocritValidator procdef_validate_haematocrit
    Haemoglobin procdef_haemoglobin
    HaemoglobinValidator procdef_validate_haemoglobin
    Lymphocytes procdef_lymphocytes
    LymphocytesValidator procdef_validate_lymphocytes
    Monocytes procdef_monocytes
    MonocytesValidator procdef_validate_monocytes
    Neutrophils procdef_neutrophils
    NeutrophilsValidator procdef_validate_neutrophils
    Platelets procdef_platelets
    PlateletsValidator procdef_validate_platelets
    RBC procdef_rbc
    RBCValidator procdef_validate_rbc
    Wbc procdef_wbc
    WbcValidator procdef_validate_wbc
    # -------------------------------------------------------------------------
    # Substance misuse
    # -------------------------------------------------------------------------
    AlcoholUnits procdef_alcoholunits
    AlcoholUnitsValidator procdef_validate_alcoholunits

progressdb = DESTINATION_DATABASE
hashphrase = doesnotmatter
# truncate_text_at = 32766
# record_truncated_values = False
max_rows_before_commit = 1000
max_bytes_before_commit = 83886080

# -----------------------------------------------------------------------------
# Cloud NLP demo
# -----------------------------------------------------------------------------

[nlpdef:cloud_nlp_demo]

inputfielddefs =
    INPUT_FIELD_CLINICAL_DOCUMENTS
    INPUT_FIELD_PROGRESS_NOTES
processors =
    Cloud procdef_cloud_crp
progressdb = DESTINATION_DATABASE
hashphrase = doesnotmatter
cloud_config = my_uk_cloud_service
cloud_request_data_dir = /srv/crate/clouddata


# =============================================================================
# B. NLP processor definitions
# =============================================================================
# - You're likely to have to modify the destination databases these point to,
#   but otherwise you can probably leave them as they are.

# -----------------------------------------------------------------------------
# Specimen CRATE regular expression processor definitions
# -----------------------------------------------------------------------------

    # Most of these are very simple, and just require a destination database
    # (as a cross-reference to a database section within this file) and a
    # destination table.

    # Biochemistry

[processor:procdef_albumin]
destdb = DESTINATION_DATABASE
desttable = albumin
[processor:procdef_validate_albumin]
destdb = DESTINATION_DATABASE
desttable = validate_albumin

[processor:procdef_alkphos]
destdb = DESTINATION_DATABASE
desttable = alkphos
[processor:procdef_validate_alkphos]
destdb = DESTINATION_DATABASE
desttable = validate_alkphos

[processor:procdef_alt]
destdb = DESTINATION_DATABASE
desttable = alt
[processor:procdef_validate_alt]
destdb = DESTINATION_DATABASE
desttable = validate_alt

[processor:procdef_bilirubin]
destdb = DESTINATION_DATABASE
desttable = bilirubin
[processor:procdef_validate_bilirubin]
destdb = DESTINATION_DATABASE
desttable = validate_bilirubin

[processor:procdef_creatinine]
destdb = DESTINATION_DATABASE
desttable = creatinine
[processor:procdef_validate_creatinine]
destdb = DESTINATION_DATABASE
desttable = validate_creatinine

[processor:procdef_crp]
destdb = DESTINATION_DATABASE
desttable = crp
[processor:procdef_validate_crp]
destdb = DESTINATION_DATABASE
desttable = validate_crp

[processor:procdef_gammagt]
destdb = DESTINATION_DATABASE
desttable = gammagt
[processor:procdef_validate_gammagt]
destdb = DESTINATION_DATABASE
desttable = validate_gammagt

[processor:procdef_glucose]
destdb = DESTINATION_DATABASE
desttable = glucose
[processor:procdef_validate_glucose]
destdb = DESTINATION_DATABASE
desttable = validate_glucose

[processor:procdef_hba1c]
destdb = DESTINATION_DATABASE
desttable = hba1c
[processor:procdef_validate_hba1c]
destdb = DESTINATION_DATABASE
desttable = validate_hba1c

[processor:procdef_hdlcholesterol]
destdb = DESTINATION_DATABASE
desttable = hdlcholesterol
[processor:procdef_validate_hdlcholesterol]
destdb = DESTINATION_DATABASE
desttable = validate_hdlcholesterol

[processor:procdef_ldlcholesterol]
destdb = DESTINATION_DATABASE
desttable = ldlcholesterol
[processor:procdef_validate_ldlcholesterol]
destdb = DESTINATION_DATABASE
desttable = validate_ldlcholesterol

[processor:procdef_lithium]
destdb = DESTINATION_DATABASE
desttable = lithium
[processor:procdef_validate_lithium]
destdb = DESTINATION_DATABASE
desttable = validate_lithium

[processor:procdef_potassium]
destdb = DESTINATION_DATABASE
desttable = potassium
[processor:procdef_validate_potassium]
destdb = DESTINATION_DATABASE
desttable = validate_potassium

[processor:procdef_sodium]
destdb = DESTINATION_DATABASE
desttable = sodium
[processor:procdef_validate_sodium]
destdb = DESTINATION_DATABASE
desttable = validate_sodium

[processor:procdef_totalcholesterol]
destdb = DESTINATION_DATABASE
desttable = totalcholesterol
[processor:procdef_validate_totalcholesterol]
destdb = DESTINATION_DATABASE
desttable = validate_totalcholesterol

[processor:procdef_triglycerides]
destdb = DESTINATION_DATABASE
desttable = triglycerides
[processor:procdef_validate_triglycerides]
destdb = DESTINATION_DATABASE
desttable = validate_triglycerides

[processor:procdef_tsh]
destdb = DESTINATION_DATABASE
desttable = tsh
[processor:procdef_validate_tsh]
destdb = DESTINATION_DATABASE
desttable = validate_tsh

[processor:procdef_urea]
destdb = DESTINATION_DATABASE
desttable = urea
[processor:procdef_validate_urea]
destdb = DESTINATION_DATABASE
desttable = validate_urea

    # Clinical

[processor:procdef_bmi]
destdb = DESTINATION_DATABASE
desttable = bmi
[processor:procdef_validate_bmi]
destdb = DESTINATION_DATABASE
desttable = validate_bmi

[processor:procdef_bp]
destdb = DESTINATION_DATABASE
desttable = bp
[processor:procdef_validate_bp]
destdb = DESTINATION_DATABASE
desttable = validate_bp

[processor:procdef_height]
destdb = DESTINATION_DATABASE
desttable = height
[processor:procdef_validate_height]
destdb = DESTINATION_DATABASE
desttable = validate_height

[processor:procdef_weight]
destdb = DESTINATION_DATABASE
desttable = weight
[processor:procdef_validate_weight]
destdb = DESTINATION_DATABASE
desttable = validate_weight

    # Cognitive

[processor:procdef_ace]
destdb = DESTINATION_DATABASE
desttable = ace
[processor:procdef_validate_ace]
destdb = DESTINATION_DATABASE
desttable = validate_ace

[processor:procdef_miniace]
destdb = DESTINATION_DATABASE
desttable = miniace
[processor:procdef_validate_miniace]
destdb = DESTINATION_DATABASE
desttable = validate_miniace

[processor:procdef_mmse]
destdb = DESTINATION_DATABASE
desttable = mmse
[processor:procdef_validate_mmse]
destdb = DESTINATION_DATABASE
desttable = validate_mmse

[processor:procdef_moca]
destdb = DESTINATION_DATABASE
desttable = moca
[processor:procdef_validate_moca]
destdb = DESTINATION_DATABASE
desttable = validate_moca

    # Haematology

[processor:procdef_basophils]
destdb = DESTINATION_DATABASE
desttable = basophils
[processor:procdef_validate_basophils]
destdb = DESTINATION_DATABASE
desttable = validate_basophils

[processor:procdef_eosinophils]
destdb = DESTINATION_DATABASE
desttable = eosinophils
[processor:procdef_validate_eosinophils]
destdb = DESTINATION_DATABASE
desttable = validate_eosinophils

[processor:procdef_esr]
destdb = DESTINATION_DATABASE
desttable = esr
[processor:procdef_validate_esr]
destdb = DESTINATION_DATABASE
desttable = validate_esr

[processor:procdef_haematocrit]
destdb = DESTINATION_DATABASE
desttable = haematocrit
[processor:procdef_validate_haematocrit]
destdb = DESTINATION_DATABASE
desttable = validate_haematocrit

[processor:procdef_haemoglobin]
destdb = DESTINATION_DATABASE
desttable = haemoglobin
[processor:procdef_validate_haemoglobin]
destdb = DESTINATION_DATABASE
desttable = validate_haemoglobin

[processor:procdef_lymphocytes]
destdb = DESTINATION_DATABASE
desttable = lymphocytes
[processor:procdef_validate_lymphocytes]
destdb = DESTINATION_DATABASE
desttable = validate_lymphocytes

[processor:procdef_monocytes]
destdb = DESTINATION_DATABASE
desttable = monocytes
[processor:procdef_validate_monocytes]
destdb = DESTINATION_DATABASE
desttable = validate_monocytes

[processor:procdef_neutrophils]
destdb = DESTINATION_DATABASE
desttable = neutrophils
[processor:procdef_validate_neutrophils]
destdb = DESTINATION_DATABASE
desttable = validate_neutrophils

[processor:procdef_platelets]
destdb = DESTINATION_DATABASE
desttable = platelets
[processor:procdef_validate_platelets]
destdb = DESTINATION_DATABASE
desttable = validate_platelets

[processor:procdef_rbc]
destdb = DESTINATION_DATABASE
desttable = rbc
[processor:procdef_validate_rbc]
destdb = DESTINATION_DATABASE
desttable = validate_rbc

[processor:procdef_wbc]
destdb = DESTINATION_DATABASE
desttable = wbc
[processor:procdef_validate_wbc]
destdb = DESTINATION_DATABASE
desttable = validate_wbc

    # Substance misuse

[processor:procdef_alcoholunits]
destdb = DESTINATION_DATABASE
desttable = alcoholunits
[processor:procdef_validate_alcoholunits]
destdb = DESTINATION_DATABASE
desttable = validate_alcoholunits

# -----------------------------------------------------------------------------
# Specimen GATE demo people/places processor definition
# -----------------------------------------------------------------------------

    # ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    # Define the processor
    # ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

[processor:procdef_gate_name_location]

destdb = DESTINATION_DATABASE
outputtypemap =
    Person output_person
    Location output_location
progargs =
    java
    -classpath "{NLPPROGDIR}"{OS_PATHSEP}"{GATE_HOME}/lib/*"
    -Dgate.home="{GATE_HOME}"
    CrateGatePipeline
    --gate_app "{GATE_HOME}/plugins/ANNIE/ANNIE_with_defaults.gapp"
    --pluginfile "{GATE_PLUGIN_FILE}"
    --annotation Person
    --annotation Location
    --input_terminator END_OF_TEXT_FOR_NLP
    --output_terminator END_OF_NLP_OUTPUT_RECORD
    --log_tag {NLPLOGTAG}
    --verbose
progenvsection = MY_ENV_SECTION
input_terminator = END_OF_TEXT_FOR_NLP
output_terminator = END_OF_NLP_OUTPUT_RECORD
# max_external_prog_uses = 1000

    # ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    # Define the output tables used by this GATE processor
    # ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

[output:output_person]

desttable = person
renames =
    firstName   firstname
destfields =
    rule        VARCHAR(100)    Rule used to find this person (e.g. TitleFirstName, PersonFull)
    firstname   VARCHAR(100)    First name
    surname     VARCHAR(100)    Surname
    gender      VARCHAR(7)      Gender (e.g. male, female, unknown)
    kind        VARCHAR(100)    Kind of name (e.g. personName, fullName)
    # ... longest gender: "unknown" (7)
indexdefs =
    firstname   64
    surname     64

[output:output_location]

desttable = location
renames =
    locType     loctype
destfields =
    rule        VARCHAR(100)    Rule used (e.g. Location1)
    loctype     VARCHAR(100)    Location type (e.g. city)
indexdefs =
    rule    100
    loctype 100


# -----------------------------------------------------------------------------
# Specimen Sheffield/KCL KConnect (Bio-YODIE) processor definition
# -----------------------------------------------------------------------------
# https://gate.ac.uk/applications/bio-yodie.html

    # ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    # Define the processor
    # ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

[processor:procdef_gate_kconnect]

destdb = DESTINATION_DATABASE
outputtypemap =
    Disease_or_Syndrome output_disease_or_syndrome
progargs =
    java
    -classpath "{NLPPROGDIR}"{OS_PATHSEP}"{GATE_HOME}/lib/*"
    -Dgate.home="{GATE_HOME}"
    CrateGatePipeline
    --gate_app "{KCONNECTDIR}/main-bio/main-bio.xgapp"
    --pluginfile "{GATE_PLUGIN_FILE}"
    --annotation Disease_or_Syndrome
    --input_terminator END_OF_TEXT_FOR_NLP
    --output_terminator END_OF_NLP_OUTPUT_RECORD
    --log_tag {NLPLOGTAG}
    --suppress_gate_stdout
    --verbose
progenvsection = MY_ENV_SECTION
input_terminator = END_OF_TEXT_FOR_NLP
output_terminator = END_OF_NLP_OUTPUT_RECORD
# max_external_prog_uses = 1000

    # ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    # Define the output tables used by this GATE processor
    # ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

[output:output_disease_or_syndrome]

desttable = kconnect_diseases
renames =
    Experiencer     experiencer
    Negation        negation
    PREF            pref
    STY             sty
    TUI             tui
    Temporality     temporality
    VOCABS          vocabs
destfields =
    # Found by manual inspection of KConnect/Bio-YODIE output from the GATE console:
    experiencer  VARCHAR(100)  Who experienced it; e.g. "Patient", "Other"
    negation     VARCHAR(100)  Was it negated or not; e.g. "Affirmed", "Negated"
    pref         VARCHAR(100)  PREFferred name; e.g. "Rheumatic gout"
    sty          VARCHAR(100)  Semantic Type (STY) [semantic type name]; e.g. "Disease or Syndrome"
    tui          VARCHAR(4)    Type Unique Identifier (TUI) [semantic type identifier]; 4 characters; https://www.ncbi.nlm.nih.gov/books/NBK9679/; e.g. "T047"
    temporality  VARCHAR(100)  Occurrence in time; e.g. "Recent", "historical", "hypothetical"
    vocabs       VARCHAR(255)  List of UMLS vocabularies; e.g. "AIR,MSH,NDFRT,MEDLINEPLUS,NCI,LNC,NCI_FDA,NCI,MTH,AIR,ICD9CM,LNC,SNOMEDCT_US,LCH_NW,HPO,SNOMEDCT_US,ICD9CM,SNOMEDCT_US,COSTAR,CST,DXP,QMR,OMIM,OMIM,AOD,CSP,NCI_NCI-GLOSS,CHV"
    inst         VARCHAR(8)    Looks like a Concept Unique Identifier (CUI); 1 letter then 7 digits; e.g. "C0003873"
    inst_full    VARCHAR(255)  Looks like a URL to a CUI; e.g. "http://linkedlifedata.com/resource/umls/id/C0003873"
    language     VARCHAR(100)  Language; e.g. ""; ?will look like "ENG" for English? See https://www.nlm.nih.gov/research/umls/implementation_resources/query_diagrams/er1.html
    tui_full     VARCHAR(255)  TUI (?); e.g. "http://linkedlifedata.com/resource/semanticnetwork/id/T047"
indexdefs =
    pref    100
    sty     100
    tui     4
    inst    8


# -----------------------------------------------------------------------------
# Specimen KCL GATE pharmacotherapy processor definition
# -----------------------------------------------------------------------------
# https://github.com/KHP-Informatics/brc-gate-pharmacotherapy

    # ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    # Define the processor
    # ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

[processor:procdef_gate_pharmacotherapy]

destdb = DESTINATION_DATABASE
outputtypemap =
    Prescription output_prescription
progargs =
    java
    -classpath "{NLPPROGDIR}"{OS_PATHSEP}"{GATE_HOME}/lib/*"
    -Dgate.home="{GATE_HOME}"
    CrateGatePipeline
    --gate_app "{GATE_PHARMACOTHERAPY_DIR}/application.xgapp"
    --pluginfile "{GATE_PLUGIN_FILE}"
    --include_set Output
    --annotation Prescription
    --input_terminator END_OF_TEXT_FOR_NLP
    --output_terminator END_OF_NLP_OUTPUT_RECORD
    --log_tag {NLPLOGTAG}
    --suppress_gate_stdout
    --show_contents_on_crash
progenvsection = MY_ENV_SECTION
input_terminator = END_OF_TEXT_FOR_NLP
output_terminator = END_OF_NLP_OUTPUT_RECORD
# max_external_prog_uses = 1000

    # ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    # Define the output tables used by this GATE processor
    # ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

[output:output_prescription]

desttable = medications_gate
renames =
    drug-type           drug_type
    dose-value          dose_value
    dose-unit           dose_unit
    dose-multiple       dose_multiple
    Directionality      directionality
    Experiencer         experiencer
    "Length of Time"    length_of_time
    Temporality         temporality
    "Unit of Time"      unit_of_time
null_literals =
    null
    ""
destfields =
    # Found by (a) manual inspection of BRC GATE pharmacotherapy output from
    # the GATE console; (b) inspection of
    # application-resources/schemas/Prescription.xml
    # Note preference for DECIMAL over FLOAT/REAL; see
    # https://stackoverflow.com/questions/1056323
    # Note that not all annotations appear for all texts. Try e.g.:
    #   Please start haloperidol 5mg tds.
    #   I suggest you start haloperidol 5mg tds for one week.
    rule            VARCHAR(100)  Rule yielding this drug. Not in XML but is present in a subset: e.g. "weanOff"; max length unclear
    drug            VARCHAR(200)  Drug name. Required string; e.g. "haloperidol"; max length 47 from "wc -L BNF_generic.lst", 134 from BNF_trade.lst
    drug_type       VARCHAR(100)  Type of drug name. Required string; from "drug-type"; e.g. "BNF_generic"; ?length of longest drug ".lst" filename
    dose            VARCHAR(100)  Dose text. Required string; e.g. "5mg"; max length unclear
    dose_value      DECIMAL       Numerical dose value. Required numeric; from "dose-value"; "double" in the XML but DECIMAL probably better; e.g. 5.0
    dose_unit       VARCHAR(100)  Text of dose units. Required string; from "dose-unit"; e.g. "mg"; max length unclear
    dose_multiple   INT           Dose count (multiple). Required integer; from "dose-multiple"; e.g. 1
    route           VARCHAR(7)    Route of administration. Required string; one of: "oral", "im", "iv", "rectal", "sc", "dermal", "unknown"
    status          VARCHAR(10)   Change in drug status. Required; one of: "start", "continuing", "stop"
    tense           VARCHAR(7)    Tense in which drug is referred to. Required; one of: "past", "present"
    date            VARCHAR(100)  ?. Optional string; max length unclear
    directionality  VARCHAR(100)  ?. Optional string; max length unclear
    experiencer     VARCHAR(100)  Person experiencing the drug-related event. Optional string; e.g. "Patient"
    frequency       DECIMAL       Frequency (times per <time_unit>). Optional numeric; "double" in the XML but DECIMAL probably better
    interval        DECIMAL       The n in "every n <time_unit>s" (1 for "every <time_unit>"). Optional numeric; "double" in the XML but DECIMAL probably better
    length_of_time  VARCHAR(100)  ?. Optional string; from "Length of Time"; max length unclear
    temporality     VARCHAR(100)  ?. Optional string; e.g. "Recent", "Historical"
    time_unit       VARCHAR(100)  Unit of time (see frequency, interval). Optional string; from "time-unit"; e.g. "day"; max length unclear
    unit_of_time    VARCHAR(100)  ?. Optional string; from "Unit of Time"; max length unclear
    when            VARCHAR(100)  ?. Optional string; max length unclear
indexdefs =
    rule    100
    drug    200
    route   7
    status  10
    tense   7


# -----------------------------------------------------------------------------
# Specimen KCL Lewy Body Diagnosis Application (LBDA) processor definition
# -----------------------------------------------------------------------------
# https://github.com/KHP-Informatics/brc-gate-LBD

    # ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    # Define the processor
    # ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

[processor:procdef_gate_kcl_lbda]

    # "cDiagnosis" is the "confirmed diagnosis" field, as d/w Jyoti Jyoti
    # 2018-03-20; see also README.md. This appears in the "Automatic" and the
    # unnamed set. There is also a near-miss one, "DiagnosisAlmost", which
    # appears in the unnamed set.
    #   "Mr Jones has Lewy body dementia."
    #       -> DiagnosisAlmost
    #   "Mr Jones has a diagnosis of Lewy body dementia."
    #       -> DiagnosisAlmost, cDiagnosis
    # Note that we must use lower case in the outputtypemap.

destdb = DESTINATION_DATABASE
outputtypemap =
    cDiagnosis output_lbd_diagnosis
    DiagnosisAlmost output_lbd_diagnosis
progargs =
    java
    -classpath "{NLPPROGDIR}"{OS_PATHSEP}"{GATE_HOME}/lib/*"
    -Dgate.home="{GATE_HOME}"
    CrateGatePipeline
    --gate_app "{KCL_LBDA_DIR}/application.xgapp"
    --pluginfile "{GATE_PLUGIN_FILE}"
    --set_annotation "" DiagnosisAlmost
    --set_annotation Automatic cDiagnosis
    --input_terminator END_OF_TEXT_FOR_NLP
    --output_terminator END_OF_NLP_OUTPUT_RECORD
    --log_tag {NLPLOGTAG}
    --suppress_gate_stdout
    --verbose
progenvsection = MY_ENV_SECTION
input_terminator = END_OF_TEXT_FOR_NLP
output_terminator = END_OF_NLP_OUTPUT_RECORD
# max_external_prog_uses = 1000

    # ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    # Define the output tables used by this GATE processor
    # ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

[output:output_lbd_diagnosis]

desttable = lewy_body_dementia_gate
null_literals =
    null
    ""
destfields =
    # Found by
    # (a) manual inspection of output from the GATE Developer console:
    # - e.g. {rule=Includefin, text=Lewy body dementia}
    # (b) inspection of contents:
    # - run a Cygwin shell
    # - find . -type f -exec grep cDiagnosis -l {} \;
    # - 3 hits:
    #       ./application-resources/jape/DiagnosisExclude2.jape
    #           ... part of the "Lewy"-detection apparatus
    #       ./application-resources/jape/text-feature.jape
    #           ... adds "text" annotation to cDiagnosis Token
    #       ./application.xgapp
    #           ... in annotationTypes
    # On that basis:
    rule            VARCHAR(100)  Rule that generated the hit.
    text            VARCHAR(200)  Text that matched the rule.
indexdefs =
    rule    100
    text    200


# -----------------------------------------------------------------------------
# Specimen MedEx processor definition
# -----------------------------------------------------------------------------
# https://sbmi.uth.edu/ccb/resources/medex.htm

[processor:procdef_medex_medications]

destdb = DESTINATION_DATABASE
desttable = medications_medex
progargs =
    java
    -classpath {NLPPROGDIR}:{MEDEXDIR}/bin:{MEDEXDIR}/lib/*
    -Dfile.encoding=UTF-8
    CrateMedexPipeline
    -lt {NLPLOGTAG}
    -v -v
# ... other arguments are added by the code
progenvsection = MY_ENV_SECTION


# =============================================================================
# C. Environment variable definitions
# =============================================================================
# - You'll need to modify this according to your local configuration.

[env:MY_ENV_SECTION]

GATE_HOME = /path/to/GATE_Developer_9.0.1
GATE_PHARMACOTHERAPY_DIR = /path/to/brc-gate-pharmacotherapy
GATE_PLUGIN_FILE = /path/to/specimen_gate_plugin_file.ini
KCL_LBDA_DIR = /path/to/brc-gate-LBD/Lewy_Body_Diagnosis
KCONNECTDIR = /path/to/yodie-pipeline-1-2-umls-only
MEDEXDIR = /path/to/Medex_UIMA_1.3.6
NLPPROGDIR = /path/to/crate_anon/nlp_manager/compiled_nlp_classes
OS_PATHSEP = :


# =============================================================================
# D. Input field definitions
# =============================================================================

[input:INPUT_FIELD_CLINICAL_DOCUMENTS]

srcdb = SOURCE_DATABASE
srctable = EXTRACTED_CLINICAL_DOCUMENTS
srcpkfield = DOCUMENT_PK
srcfield = DOCUMENT_TEXT
srcdatetimefield = DOCUMENT_DATE
copyfields =
    RID_FIELD
    TRID_FIELD
indexed_copyfields =
    RID_FIELD
    TRID_FIELD
# debug_row_limit = 0

[input:INPUT_FIELD_PROGRESS_NOTES]

srcdb = SOURCE_DATABASE
srctable = PROGRESS_NOTES
srcpkfield = PN_PK
srcfield = PN_TEXT
srcdatetimefield = PN_DATE
copyfields =
    RID_FIELD
    TRID_FIELD
indexed_copyfields =
    RID_FIELD
    TRID_FIELD


# =============================================================================
# E. Database definitions, each in its own section
# =============================================================================

[database:SOURCE_DATABASE]

url = mysql+mysqldb://anontest:XXX@127.0.0.1:3306/anonymous_output?charset=utf8

[database:DESTINATION_DATABASE]

url = mysql+mysqldb://anontest:XXX@127.0.0.1:3306/anonymous_output?charset=utf8


# =============================================================================
# F. Information for using cloud-based NLP
# =============================================================================

[cloud:my_uk_cloud_service]

cloud_url = https://your_url
username = your_username
password = your_password
wait_on_conn_err = 180
max_content_length = 0
max_records_per_request = 1000
limit_before_commit = 1000
stop_at_failure = true
max_tries = 5
rate_limit_hz = 2

[processor:procdef_cloud_crp]

destdb = DESTINATION_DATABASE
desttable = crp_test
processor_name = crate_anon.nlp_manager.parse_biochemistry.Crp
processor_format = Standard


